import fs from 'fs';
import path from 'path';
import fetch from 'node-fetch';
import { tmpdir } from 'os';
import { exec } from 'child_process';

export default {
  command: ['emojimix2'],
  help: ['*‚í∫·¥ç·¥è·¥ä…™·¥ç…™x2 <·¥á·¥ç·¥è·¥ä…™>*'],
  tags: ['*‚ÑÇùïÜ‚Ñïùïçùîº‚ÑùùïãùïÄùîªùïÜ‚Ñù/ùïÜùïã‚ÑùùïÜùïä*'],

  run: async (m, { conn, text, prefix, command, chatId }) => {
    try {
      if (!text) return m.reply(`*[ üîé ] ¬øœô·¥ú·¥áÃÅ ·¥á·¥ç·¥è·¥ä…™ ·¥Ö·¥ás·¥á·¥Äs ·¥Ñ·¥è·¥ç ô…™…¥·¥Ä Ä?* (·¥á·¥ä: *${prefix + command}* üòé)`);

      const url = `https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${encodeURIComponent(text)}`;
      const res = await fetch(url);
      const json = await res.json();

      if (!json.results || json.results.length === 0) {
        return m.reply('*[ ‚ùå ] …¥·¥è s·¥á ·¥á…¥·¥Ñ·¥è…¥·¥õ Ä·¥èÃÅ  Ä·¥ás·¥ú ü·¥õ·¥Ä·¥Ö·¥è ·¥ò·¥Ä Ä·¥Ä ·¥ás·¥á ·¥á·¥ç·¥è·¥ä…™.*');
      }

      for (const result of json.results) {
        const imgBuffer = await (await fetch(result.url)).buffer();

        const pngPath = path.join(tmpdir(), `emoji-${Date.now()}.png`);
        const webpPath = pngPath.replace('.png', '.webp');

        fs.writeFileSync(pngPath, imgBuffer);
        
        await new Promise((resolve, reject) => {
          exec(`cwebp -q 80 "${pngPath}" -o "${webpPath}"`, (err, stdout, stderr) => {
            if (err) return reject(stderr);
            resolve(stdout);
          });
        });

        await conn.sendMessage(chatId, {
          sticker: { url: webpPath }
        }, { quoted: m });

        fs.unlinkSync(pngPath);
        fs.unlinkSync(webpPath);
      }

    } catch (e) {
      console.error(e);
      m.reply('* ú·¥ç·¥ç... ·¥Ä ü…¢·¥è s·¥Ä ü…™·¥èÃÅ ·¥ç·¥Ä ü, ·¥Ö·¥á ô·¥á Ä…™ÃÅ·¥Äs  Ä·¥á·¥ò·¥è Ä·¥õ·¥Ä Ä ·¥ás·¥õ·¥á ·¥ò Ä·¥è ô ü·¥á·¥ç·¥Ä. üìç*');
    }
  }
};