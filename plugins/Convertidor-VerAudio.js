import fs from 'fs';
import path from 'path';
import { downloadMediaMessage } from '@whiskeysockets/baileys';

export default {
  command: ['veraudio', 'voaudio'],
  help: ['*‚ìã·¥á Ä·¥Ä·¥ú·¥Ö…™·¥è < Ä·¥ò·¥Ö ·¥Ä ·¥ú…¥ ·¥Ä·¥ú·¥Ö…™·¥è ·¥Ö·¥á ·¥†·¥á Ä ·¥ú…¥·¥Ä s·¥è ü·¥Ä ·¥†·¥á·¥¢>*'],
  tags: ['*‚ÑÇùïÜ‚Ñïùïçùîº‚ÑùùïãùïÄùîªùïÜ‚Ñù/ùïÜùïã‚ÑùùïÜùïä*'],

  run: async (m, { conn, chatId }) => {
    try {
      let quoted = m.message?.extendedTextMessage?.contextInfo?.quotedMessage;
      if (!quoted) return m.tutorial('*[ ‚ö†Ô∏è ]  Ä·¥ás·¥ò·¥è…¥·¥Ö·¥á ·¥Ä ·¥ú…¥ ·¥Ä·¥ú·¥Ö…™·¥è ·¥Ö·¥á "·¥†·¥á Ä ·¥ú…¥·¥Ä s·¥è ü·¥Ä ·¥†·¥á·¥¢".*');

      if (quoted?.ephemeralMessage) quoted = quoted.ephemeralMessage.message;
      if (quoted?.viewOnceMessage) quoted = quoted.viewOnceMessage.message;
      if (quoted?.viewOnceMessageV2) quoted = quoted.viewOnceMessageV2.message;

      const type = quoted?.audioMessage ? 'audioMessage' : null;
      if (!type) return m.reply('*[ ‚ö†Ô∏è ] ·¥á ü ·¥ç·¥á…¥s·¥Ä·¥ä·¥á …¥·¥è ·¥Ñ·¥è…¥·¥õ…™·¥á…¥·¥á ·¥ú…¥ ·¥Ä·¥ú·¥Ö…™·¥è.*');

      const audioBuffer = await downloadMediaMessage(
        { message: { [type]: quoted[type] } },
        'buffer',
        {},
        { logger: conn.logger, reuploadRequest: conn.updateMediaMessage }
      );

      const filename = path.join('./temp', `veraudio_${Date.now()}.mp3`);
      fs.writeFileSync(filename, audioBuffer);

      await conn.sendMessage(chatId, {
        audio: { url: filename },
        mimetype: 'audio/mpeg',
        ptt: true
      }, { quoted: m });

      fs.unlinkSync(filename);

    } catch (e) {
      console.error('Error:', e);
      m.reply('* ú·¥ç·¥ç... ·¥Ä ü…¢·¥è s·¥Ä ü…™·¥èÃÅ ·¥ç·¥Ä ü, ·¥Ö·¥á ô·¥á Ä…™ÃÅ·¥Äs  Ä·¥á·¥ò·¥è Ä·¥õ·¥Ä Ä ·¥ás·¥õ·¥á ·¥ò Ä·¥è ô ü·¥á·¥ç·¥Ä. üìç*');
    }
  },
};