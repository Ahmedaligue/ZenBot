import { toImg } from '../lib/sticker.js';
import { getFileBuffer } from '../lib/myfunc.js';

export default {
  help: ['ùöÉùôæùô∏ùôºùô∂ (ùöõùöéùöúùöôùöòùöóùöçùöéùöõ ùöä ùöúùöùùöíùöåùöîùöéùöõ)'],
  tags: ['‚öôÔ∏è ùóñùó¢ùó°ùó©ùóòùó•ùóßùóúùóóùó¢ùó•'],
  command: ['toimg', 'sticker2img', 'stickertoimg'],

  run: async (m, { conn, command, prefix, chatId }) => {
    try {
      const quoted = m.quoted?.message || m.message?.extendedTextMessage?.contextInfo?.quotedMessage;
      const isSticker = quoted?.stickerMessage;

      if (!isSticker) {
        return m.reply(`‚ö†Ô∏è *Us√° bien el comando:* Respond√© a un sticker con *${prefix}${command}* para convertirlo en imagen.`);
      }

      const buffer = await getFileBuffer(quoted.stickerMessage, 'sticker');

      await m.reply('‚è≥ *Convirtiendo sticker a imagen...*');

      const imgBuffer = await toImg(buffer);

      await conn.sendMessage(chatId, { image: imgBuffer }, { quoted: m });

    } catch (err) {
      console.error('[‚ùå ERROR toImg]:', err);
      m.reply('‚ùå *Error:* No se pudo convertir el sticker a imagen. Asegurate de que sea un sticker v√°lido.');
    }
  }
};