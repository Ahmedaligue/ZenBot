import util from 'util';

export default {
  command: ['=>'],
  help: ['*=> (·¥Ñ·¥èÃÅ·¥Ö…™…¢·¥è ·¥Äs è…¥·¥Ñ)*'],
  tags: ['*‚ÑÇ‚Ñùùîºùî∏ùîªùïÜ‚Ñù*'],

  run: async (m, { text, conn, isOwner }) => {
    if (!isOwner) return m.reply('*[ ‚ö†Ô∏è ] ·¥ás·¥õ·¥á ·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è s·¥è ü·¥è  ü·¥è ·¥ò·¥ú·¥á·¥Ö·¥á ·¥ús·¥Ä Ä ·¥á ü ·¥ò Ä·¥è·¥ò…™·¥á·¥õ·¥Ä Ä…™·¥è ·¥Ö·¥á ü  ô·¥è·¥õ.*');
    if (!text) return m.reply('*¬øœô·¥ú·¥áÃÅ œô·¥ú…™·¥á Ä·¥ás ·¥á·¥†·¥Ä ü·¥ú·¥Ä Ä?*');
    try {
      let evaled = await (async () => eval(text))();
      if (typeof evaled !== 'string') evaled = util.inspect(evaled);
      m.reply(evaled);
    } catch (err) {
      m.reply('*[ ‚ùå ] ·¥á Ä Ä·¥è Ä:*\n' + err);
    }
  }
};