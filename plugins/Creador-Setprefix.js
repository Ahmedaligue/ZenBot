import { config } from '../config.js';

export default {
  command: ['cambiarprefijo', 'setprefix', 'nuevoprefix', 'nuevoprefijo'],
  help: ['*‚ìà·¥á·¥õ·¥ò Ä·¥á“ì…™x <…¥·¥ú·¥á·¥†·¥è ·¥ò Ä·¥á“ì…™·¥ä·¥è>*'],
  tags: ['*‚ÑÇ‚Ñùùîºùî∏ùîªùïÜ‚Ñù*'],

  run: async (m, { conn, args, isOwner }) => {
    if (!isOwner) {
      await m.reply('*[ ‚ö†Ô∏è ] ·¥ás·¥õ·¥á ·¥Ñ·¥è·¥ç·¥Ä…¥·¥Ö·¥è s·¥è ü·¥è  ü·¥è ·¥ò·¥ú·¥á·¥Ö·¥á ·¥ús·¥Ä Ä ·¥á ü ·¥ò Ä·¥è·¥ò…™·¥á·¥õ·¥Ä Ä…™·¥è ·¥Ö·¥á ü  ô·¥è·¥õ.*');
      return;
    }

    if (args.length === 0) {
      await m.reply('*[ ‚ùå ] ·¥ò·¥è Ä “ì·¥Ä·¥†·¥è Ä, …™…¥…¢ Ä·¥ás·¥Ä ·¥á ü …¥·¥ú·¥á·¥†·¥è ·¥ò Ä·¥á“ì…™·¥ä·¥è.*');
      return;
    }

    const nuevoPrefijo = args[0];

    if (nuevoPrefijo.trim() === '') {
      await m.reply('*[ ‚ùå ] ·¥á ü ·¥ò Ä·¥á“ì…™·¥ä·¥è …¥·¥è ·¥ò·¥ú·¥á·¥Ö·¥á ·¥ás·¥õ·¥Ä Ä ·¥†·¥Ä·¥Ñ…™ÃÅ·¥è.*');
      return;
    }

    config.prefix = nuevoPrefijo;

    await m.reply(`[ ‚úÖ ] *·¥á ü ·¥ò Ä·¥á“ì…™·¥ä·¥è  ú·¥Ä s…™·¥Ö·¥è ·¥Ñ·¥Ä·¥ç ô…™·¥Ä·¥Ö·¥è ·¥Ä: ${nuevoPrefijo}*`);
  }
};