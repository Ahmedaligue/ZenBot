export default {
  command: ['acortar', 'shorturl'],
  help: ['*‚í∂·¥Ñ·¥è Ä·¥õ·¥Ä Ä <·¥ú Ä ü>*'],
  tags: ['*‚ÑÇùïÜ‚Ñïùïçùîº‚ÑùùïãùïÄùîªùïÜ‚Ñù/ùïÜùïã‚ÑùùïÜùïä*'],

  run: async (m, { text, prefix, command }) => {
    if (!text) return m.reply(`*[‚ùó] ·¥ús·¥ÄÃÅ ·¥Äs…™ÃÅ:* ${prefix + command} https://example.com/link-largo`);

    if (!/^https?:\/\//i.test(text)) {
      return m.reply('*[‚ùó] ·¥ás·¥è …¥·¥è ·¥ò·¥Ä Ä·¥á·¥Ñ·¥á ·¥ú…¥·¥Ä ·¥ú Ä ü ·¥†·¥ÄÃÅ ü…™·¥Ö·¥Ä.*');
    }

    try {
      const res = await fetch(`https://tinyurl.com/api-create.php?url=${encodeURIComponent(text)}`);
      const short = await res.text();
      m.reply(`üîó *·¥ás·¥õ·¥á ·¥ás ·¥õ·¥ú  ü…™…¥·¥ã ·¥Ä·¥Ñ·¥è Ä·¥õ·¥Ä·¥Ö·¥è:*\n${short}`);
    } catch (err) {
      console.error(err);
      m.reply('*[‚ùó] …¥·¥è s·¥á ·¥ò·¥ú·¥Ö·¥è ·¥Ä·¥Ñ·¥è Ä·¥õ·¥Ä Ä  ü·¥Ä ·¥ú Ä ü.*');
    }
  }
};