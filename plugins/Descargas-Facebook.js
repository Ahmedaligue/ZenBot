import fs from 'fs';
import { exec } from 'child_process';
import path from 'path';

export default {
  command: ['fb', 'facebook'],
  help: ['ùôµùô± <ùöïùöíùöóùöî ùöçùöé ùôµùöäùöåùöéùöãùöòùöòùöî>'],
  tags: ['üì• ùóóùóòùó¶ùóñùóîùó•ùóöùóîùó¶'],

  run: async (m, { conn, text }) => {
    if (!text || !text.includes('facebook.com')) {
      return m.reply('‚ú≥Ô∏è *Pasame un link v√°lido de Facebook p√∫blico.*');
    }

    const folder = path.join(process.cwd(), 'lib', 'descargas', 'facebook');
    if (!fs.existsSync(folder)) fs.mkdirSync(folder, { recursive: true });

    const filename = `fb_${Date.now()}.mp4`;
    const outputPath = path.join(folder, filename);

    m.reply('‚è≥ *Descargando video de Facebook...*');

    const cmd = `yt-dlp -f best -o "${outputPath}" "${text}"`;

    exec(cmd, async (err, stdout, stderr) => {
      if (err || !fs.existsSync(outputPath)) {
        console.error('Error al descargar:', stderr || err);
        return m.reply('‚ùå *No se pudo descargar el video.* Asegurate que el link sea p√∫blico.');
      }

      try {
        await conn.sendMessage(m.chat, {
          document: fs.readFileSync(outputPath),
          mimetype: 'video/mp4',
          fileName: 'facebook_video.mp4',
          caption: '‚úÖ *Aqu√≠ tienes tu v√≠deo de Facebook.*',
        }, { quoted: m });

        fs.unlinkSync(outputPath);
      } catch (sendErr) {
        console.error('Error al enviar video:', sendErr);
        m.reply('‚ùå *Fall√≥ el env√≠o del video.*');
      }
    });
  }
};